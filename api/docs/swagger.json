{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/anonymous": {
            "post": {
                "description": "Create an anonymous access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Anonymous Log In",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app.LoginResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh-token": {
            "post": {
                "description": "Refresh an access token using a refresh token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Access Token",
                "parameters": [
                    {
                        "description": "Refresh Token Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app.LoginResponse"
                        }
                    }
                }
            }
        },
        "/api/rooms": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new room with a unique code and add the user to it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Create a new room",
                "responses": {
                    "201": {
                        "description": "Room created successfully",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/rooms/join": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Join a room using the room code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Join a room",
                "parameters": [
                    {
                        "description": "Join Room Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app.JoinRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room joined successfully",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Room Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/rooms/{id}/leave": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Leave a room using the room ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Leave a room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Room left successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Room Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This is a placeholder - only for OpenAPI documentation purposes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Post WebSocket Handler",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_event_bus.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WebSocket event",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_event_bus.Event"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chords_com_api_internal_entity.Room": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Use pointer to allow null values",
                    "allOf": [
                        {
                            "$ref": "#/definitions/gorm.DeletedAt"
                        }
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "ownerID": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.User"
                    }
                }
            }
        },
        "chords_com_api_internal_entity.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Use pointer to allow null values",
                    "allOf": [
                        {
                            "$ref": "#/definitions/gorm.DeletedAt"
                        }
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "isAnonymous": {
                    "type": "boolean"
                },
                "myRooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                    }
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_event_bus.Event": {
            "type": "object",
            "properties": {
                "data": {},
                "origin": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "internal_app.JoinRoomRequest": {
            "type": "object",
            "properties": {
                "room_code": {
                    "type": "string"
                }
            }
        },
        "internal_app.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "description": "Optional, can be empty",
                    "type": "string"
                }
            }
        },
        "internal_app.RefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    }
}