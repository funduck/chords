{
    "swagger": "2.0",
    "info": {
        "description": "This is a Chords server.",
        "title": "Chords API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/artists/search": {
            "post": {
                "description": "Search for artists using various parameters with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Search for artists",
                "operationId": "searchArtists",
                "parameters": [
                    {
                        "description": "Search Artist Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_dto.SearchArtistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.ArtistsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/artists/{id}": {
            "get": {
                "description": "Retrieve an artist by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Get artist by ID",
                "operationId": "getArtistByID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Artist"
                        }
                    }
                }
            }
        },
        "/api/auth/anonymous": {
            "post": {
                "description": "Create an anonymous access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Anonymous Log In",
                "operationId": "anonymousLogIn",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app.LoginResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh-token": {
            "post": {
                "description": "Refresh an access token using a refresh token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Access Token",
                "operationId": "refreshToken",
                "parameters": [
                    {
                        "description": "Refresh Token Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_app.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_app.LoginResponse"
                        }
                    }
                }
            }
        },
        "/api/rooms": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new room with a unique code and add the user to it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Create a new room",
                "operationId": "createRoom",
                "responses": {
                    "201": {
                        "description": "Room created successfully",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/rooms/join": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Join a room using the room code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Join a room",
                "operationId": "joinRoom",
                "parameters": [
                    {
                        "description": "Join Room Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.JoinRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room joined successfully",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/rooms/{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the state of a room.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Update a room",
                "operationId": "updateRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Room Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.UpdateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room updated successfully",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/rooms/{id}/leave": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Leave a room using the room ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Leave a room",
                "operationId": "leaveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Room left successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/songs/search": {
            "post": {
                "description": "Search for songs using various parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Search songs",
                "operationId": "searchSongs",
                "parameters": [
                    {
                        "description": "Search Song Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_dto.SearchSongRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.SongsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/songs/{id}": {
            "get": {
                "description": "Retrieve a song by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get song by ID",
                "operationId": "getSongByID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                        }
                    }
                }
            }
        },
        "/ws": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This is a placeholder - only for OpenAPI documentation purposes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Post WebSocket Handler",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_event_bus.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WebSocket event",
                        "schema": {
                            "$ref": "#/definitions/chords_com_api_internal_event_bus.Event"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chords_com_api_internal_dto.SearchArtistRequest": {
            "type": "object",
            "properties": {
                "cursor_after": {
                    "type": "string"
                },
                "cursor_before": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "query": {
                    "type": "string"
                },
                "return_rows": {
                    "type": "boolean",
                    "default": true
                },
                "return_total": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "chords_com_api_internal_dto.SearchSongRequest": {
            "type": "object",
            "properties": {
                "artist_id": {
                    "type": "integer"
                },
                "cursor_after": {
                    "type": "string"
                },
                "cursor_before": {
                    "type": "string"
                },
                "library_id": {
                    "type": "integer"
                },
                "library_type": {
                    "$ref": "#/definitions/chords_com_api_internal_entity.LibraryType"
                },
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "query": {
                    "type": "string"
                },
                "return_rows": {
                    "type": "boolean",
                    "default": true
                },
                "return_total": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "chords_com_api_internal_entity.Artist": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "name",
                "updated_at"
            ],
            "properties": {
                "compositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_entity.ArtistInfo": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "name",
                "updated_at"
            ],
            "properties": {
                "compositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "cursor": {
                    "description": "Used for pagination",
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_entity.ArtistsList": {
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.ArtistInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "chords_com_api_internal_entity.JoinRoomRequest": {
            "type": "object",
            "properties": {
                "room_code": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_entity.Library": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownerID": {
                    "type": "integer"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                    }
                },
                "type": {
                    "$ref": "#/definitions/chords_com_api_internal_entity.LibraryType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_entity.LibraryType": {
            "type": "string",
            "enum": [
                "public",
                "favorites",
                "private"
            ],
            "x-enum-comments": {
                "LibraryType_Favorites": "user's favorite songs",
                "LibraryType_Private": "only the owner can access",
                "LibraryType_Public": "anyone can access"
            },
            "x-enum-varnames": [
                "LibraryType_Public",
                "LibraryType_Favorites",
                "LibraryType_Private"
            ]
        },
        "chords_com_api_internal_entity.Room": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "updated_at"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "id": {
                    "type": "integer"
                },
                "ownerID": {
                    "type": "integer"
                },
                "state": {},
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.User"
                    }
                }
            }
        },
        "chords_com_api_internal_entity.SheetFormat": {
            "type": "string",
            "enum": [
                "chordpro"
            ],
            "x-enum-varnames": [
                "SheetFormat_Chordpro"
            ]
        },
        "chords_com_api_internal_entity.Song": {
            "type": "object",
            "required": [
                "created_at",
                "format",
                "id",
                "sheet",
                "title",
                "updated_at"
            ],
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Artist"
                    }
                },
                "composers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Artist"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "format": {
                    "$ref": "#/definitions/chords_com_api_internal_entity.SheetFormat"
                },
                "id": {
                    "type": "integer"
                },
                "owner_id": {
                    "description": "ID of the user who uploaded this song",
                    "type": "integer"
                },
                "sheet": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_entity.SongInfo": {
            "type": "object",
            "required": [
                "created_at",
                "format",
                "id",
                "sheet",
                "title",
                "updated_at"
            ],
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Artist"
                    }
                },
                "composers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Artist"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "cursor": {
                    "description": "Used for pagination",
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "format": {
                    "$ref": "#/definitions/chords_com_api_internal_entity.SheetFormat"
                },
                "id": {
                    "type": "integer"
                },
                "owner_id": {
                    "description": "ID of the user who uploaded this song",
                    "type": "integer"
                },
                "sheet": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_entity.SongsList": {
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.SongInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "chords_com_api_internal_entity.UpdateRoomRequest": {
            "type": "object",
            "properties": {
                "state": {}
            }
        },
        "chords_com_api_internal_entity.User": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-06-18T15:04:05Z"
                },
                "id": {
                    "type": "integer"
                },
                "isAnonymous": {
                    "type": "boolean"
                },
                "myLibraries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Library"
                    }
                },
                "myRooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                    }
                },
                "mySongs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Song"
                    }
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chords_com_api_internal_entity.Room"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chords_com_api_internal_event_bus.Event": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Optional context for the event, client specific",
                    "type": "string"
                },
                "data": {
                    "description": "Client specific event data"
                },
                "origin": {
                    "description": "ID of the client that originated the event",
                    "type": "integer"
                },
                "type": {
                    "description": "Client specific event type",
                    "type": "string"
                }
            }
        },
        "internal_app.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "description": "Optional, can be empty",
                    "type": "string"
                }
            }
        },
        "internal_app.RefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    }
}