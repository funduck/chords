definitions:
  chords_com_api_internal_dto.SearchSongRequest:
    properties:
      limit:
        maximum: 100
        minimum: 1
        type: integer
      offset:
        minimum: 0
        type: integer
      query:
        type: string
      query_lyrics:
        type: string
      return_rows:
        default: true
        type: boolean
      return_total:
        default: true
        type: boolean
    type: object
  chords_com_api_internal_dto.SearchSongResponse:
    properties:
      songs:
        items:
          $ref: '#/definitions/chords_com_api_internal_dto.SongInfo'
        type: array
      total:
        type: integer
    type: object
  chords_com_api_internal_dto.SongInfo:
    properties:
      artist:
        type: string
      format:
        $ref: '#/definitions/chords_com_api_internal_entity.SheetFormat'
      id:
        type: integer
      title:
        type: string
    type: object
  chords_com_api_internal_entity.JoinRoomRequest:
    properties:
      room_code:
        type: string
    type: object
  chords_com_api_internal_entity.Room:
    properties:
      code:
        type: string
      created_at:
        type: string
      deleted_at:
        example: "2025-06-18T15:04:05Z"
        type: string
      id:
        type: integer
      ownerID:
        type: integer
      state: {}
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/chords_com_api_internal_entity.User'
        type: array
    type: object
  chords_com_api_internal_entity.SheetFormat:
    enum:
    - chordpro
    type: string
    x-enum-varnames:
    - SheetFormat_Chordpro
  chords_com_api_internal_entity.Song:
    properties:
      artist:
        type: string
      created_at:
        type: string
      deleted_at:
        example: "2025-06-18T15:04:05Z"
        type: string
      format:
        $ref: '#/definitions/chords_com_api_internal_entity.SheetFormat'
      id:
        type: integer
      sheet:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  chords_com_api_internal_entity.UpdateRoomRequest:
    properties:
      state: {}
    type: object
  chords_com_api_internal_entity.User:
    properties:
      created_at:
        type: string
      deleted_at:
        example: "2025-06-18T15:04:05Z"
        type: string
      id:
        type: integer
      isAnonymous:
        type: boolean
      myRooms:
        items:
          $ref: '#/definitions/chords_com_api_internal_entity.Room'
        type: array
      rooms:
        items:
          $ref: '#/definitions/chords_com_api_internal_entity.Room'
        type: array
      updated_at:
        type: string
    type: object
  chords_com_api_internal_event_bus.Event:
    properties:
      context:
        description: Optional context for the event, client specific
        type: string
      data:
        description: Client specific event data
      origin:
        description: ID of the client that originated the event
        type: integer
      type:
        description: Client specific event type
        type: string
    type: object
  internal_app.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        description: Optional, can be empty
        type: string
    type: object
  internal_app.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/anonymous:
    post:
      consumes:
      - application/json
      description: Create an anonymous access token
      operationId: anonymousLogIn
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app.LoginResponse'
      summary: Anonymous Log In
      tags:
      - auth
  /api/auth/refresh-token:
    post:
      description: Refresh an access token using a refresh token
      operationId: refreshToken
      parameters:
      - description: Refresh Token Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_app.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app.LoginResponse'
      summary: Refresh Access Token
      tags:
      - auth
  /api/library/public:
    post:
      consumes:
      - application/json
      description: Search for songs in the public library using various parameters.
      operationId: searchPublicLibrary
      parameters:
      - description: Search Song Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chords_com_api_internal_dto.SearchSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Search results
          schema:
            $ref: '#/definitions/chords_com_api_internal_dto.SearchSongResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Search public library for songs
      tags:
      - library
  /api/rooms:
    post:
      consumes:
      - application/json
      description: Create a new room with a unique code and add the user to it.
      operationId: createRoom
      produces:
      - application/json
      responses:
        "201":
          description: Room created successfully
          schema:
            $ref: '#/definitions/chords_com_api_internal_entity.Room'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new room
      tags:
      - rooms
  /api/rooms/{id}:
    patch:
      consumes:
      - application/json
      description: Update the state of a room.
      operationId: updateRoom
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Room Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chords_com_api_internal_entity.UpdateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Room updated successfully
          schema:
            $ref: '#/definitions/chords_com_api_internal_entity.Room'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update a room
      tags:
      - rooms
  /api/rooms/{id}/leave:
    post:
      consumes:
      - application/json
      description: Leave a room using the room ID.
      operationId: leaveRoom
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Room left successfully
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Leave a room
      tags:
      - rooms
  /api/rooms/join:
    post:
      consumes:
      - application/json
      description: Join a room using the room code.
      operationId: joinRoom
      parameters:
      - description: Join Room Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chords_com_api_internal_entity.JoinRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Room joined successfully
          schema:
            $ref: '#/definitions/chords_com_api_internal_entity.Room'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Join a room
      tags:
      - rooms
  /api/songs/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a song by its ID
      operationId: getSongByID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chords_com_api_internal_entity.Song'
      summary: Get song by ID
      tags:
      - Songs
  /ws:
    post:
      consumes:
      - application/json
      description: This is a placeholder - only for OpenAPI documentation purposes.
      parameters:
      - description: Request body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/chords_com_api_internal_event_bus.Event'
      produces:
      - application/json
      responses:
        "200":
          description: WebSocket event
          schema:
            $ref: '#/definitions/chords_com_api_internal_event_bus.Event'
      security:
      - BearerAuth: []
      summary: Post WebSocket Handler
      tags:
      - WebSocket
swagger: "2.0"
